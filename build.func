variables() {
  NSAPP=$(echo ${APP,,} | tr -d ' ')
  var_install="${NSAPP}-install"
  INTEGER='^[0-9]+([.][0-9]+)?$'
  PVEHOST_NAME=$(hostname)
}

color() {
  YW=$(echo "\033[33m")
  GN=$(echo "\033[1;92m")
  RD=$(echo "\033[01;31m")
  CL=$(echo "\033[m")
  CM="✔️"
  CROSS="✖️"
  INFO="💡"
}

catch_errors() {
  set -Eeuo pipefail
  trap 'error_handler $LINENO "$BASH_COMMAND"' ERR
}

error_handler() {
  local exit_code="$?"
  local line_number="$1"
  local command="$2"
  local error_message="${RD}[ERROR]${CL} in line ${RD}$line_number${CL}: exit code ${RD}$exit_code${CL}: while executing command ${YW}$command${CL}"
  echo -e "\n$error_message\n"
}

msg_info() {
  local msg="$1"
  echo -ne "${YW}${INFO} ${msg}...${CL}"
}

msg_ok() {
  local msg="$1"
  echo -e "${GN}${CM} ${msg}${CL}"
}

msg_error() {
  local msg="$1"
  echo -e "${RD}${CROSS} ${msg}${CL}"
}

header_info() {
  clear
  echo -e "${GN}${APP} Installation Script${CL}\n"
}

base_settings() {
  CT_ID=$(pvesh get /cluster/nextid)
  CT_NAME="debian-lxc-$CT_ID"
  DISK_SIZE="${var_disk}G"
  RAM_SIZE="${var_ram}"
  CPU_CORES="${var_cpu}"
}

build_container() {
  msg_info "Checking Debian template"
  TEMPLATE="debian-12-standard_12.0-1_amd64.tar.zst"
  STORAGE="local-lvm"
  if ! pveam list "$STORAGE" | grep -q "$TEMPLATE"; then
    msg_info "Downloading Debian template"
    pveam download "local" "$TEMPLATE"
    msg_ok "Template downloaded"
  fi

  msg_info "Creating container"
  pct create "$CT_ID" "$STORAGE:vztmpl/$TEMPLATE" \
    -hostname "$CT_NAME" \
    -rootfs "$STORAGE:${DISK_SIZE}" \
    -memory "$RAM_SIZE" \
    -cores "$CPU_CORES" \
    -net0 name=eth0,bridge=vmbr0,ip=dhcp \
    -features nesting=1 \
    -password "123123Raw"

  msg_info "Disabling IPv6"
  echo "lxc.net.0.ipv6.address = none" >> /etc/pve/lxc/"$CT_ID".conf

  msg_info "Enabling root SSH access"
  pct exec "$CT_ID" -- bash -c "sed -i 's/^#PermitRootLogin.*/PermitRootLogin yes/' /etc/ssh/sshd_config && systemctl restart ssh"

  msg_ok "Container $CT_ID created"
}

description() {
  IP=$(pct exec "$CT_ID" ip a s dev eth0 | awk '/inet / {print $2}' | cut -d/ -f1)
  pct set "$CT_ID" -description "Debian LXC - IP: $IP"
}
